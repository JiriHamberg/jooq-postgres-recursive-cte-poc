/*
 * This file is generated by jOOQ.
 */
package com.example.possutest.db.tables.daos;


import com.example.possutest.db.tables.Role;
import com.example.possutest.db.tables.records.RoleRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleDao extends DAOImpl<RoleRecord, com.example.possutest.db.tables.pojos.Role, Integer> {

    /**
     * Create a new RoleDao without any configuration
     */
    public RoleDao() {
        super(Role.ROLE, com.example.possutest.db.tables.pojos.Role.class);
    }

    /**
     * Create a new RoleDao with an attached configuration
     */
    public RoleDao(Configuration configuration) {
        super(Role.ROLE, com.example.possutest.db.tables.pojos.Role.class, configuration);
    }

    @Override
    public Integer getId(com.example.possutest.db.tables.pojos.Role object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.possutest.db.tables.pojos.Role> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Role.ROLE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.possutest.db.tables.pojos.Role> fetchById(Integer... values) {
        return fetch(Role.ROLE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.possutest.db.tables.pojos.Role fetchOneById(Integer value) {
        return fetchOne(Role.ROLE.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.possutest.db.tables.pojos.Role> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Role.ROLE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.example.possutest.db.tables.pojos.Role> fetchByName(String... values) {
        return fetch(Role.ROLE.NAME, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.possutest.db.tables.pojos.Role> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Role.ROLE.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.example.possutest.db.tables.pojos.Role> fetchByType(String... values) {
        return fetch(Role.ROLE.TYPE, values);
    }

    /**
     * Fetch records that have <code>group_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.possutest.db.tables.pojos.Role> fetchRangeOfGroupId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Role.ROLE.GROUP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>group_id IN (values)</code>
     */
    public List<com.example.possutest.db.tables.pojos.Role> fetchByGroupId(Integer... values) {
        return fetch(Role.ROLE.GROUP_ID, values);
    }
}
